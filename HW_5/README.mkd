# VaporM To MIPS

This project contains source code for a Translator for the Vapor-M intermediate representation into MIPS, using an imported parser for vapor from the cs132 vapor ast.
* ```src/main/java/*```- Contains all the source files for the Translator.
* ```out/production/classes/VM2M.class``` - This is the entry point of the program. This directory contains all the compiled sources.
* ```testcases``` - Where the test files exist

### Source Code Breakdown

* ```VM2M``` - This is the main class. It first uses the vapor parser to parse the file and create a vapor program as an Abstract Syntax Tree. It then runs the built translator and prints the generated MIPS assembly.
* ```TranslatorVisitor``` - The visitor that goes through the vapor AST to create a list of strings representing a line of MIPS assembly per element. Starts by setting up the segment data and then going through each function in the program. Takes advatange of the [Visitor Design Pattern](https://sourcemaking.com/design_patterns/visitor)

### How to build

From the root of the project, run gradle.

```bash
$ gradle build
```

### How to test

The tests are just those provided with the assignment.
This testing framework also creates a buildable distribution based on student ID for submission. You can add your own tests by creating files in the ```testcases``` directory.
```bash
$ gradle :pregrade
```

