const vmt_A
	:A.constructor
	:A.increment
const vmt_B
func Main()
	t.0 = HeapAllocZ(8)
	[t.0] = :vmt_A
	obj = t.0
	if obj goto :null1
		Error("null pointer")
	null1:
	t.1 = [obj]
	t.2 = [t.1+0]
	t.3 = call t.2(obj)
	arr = t.3
	if obj goto :null2
		Error("null pointer")
	null2:
	t.4 = [obj]
	t.5 = [t.4+4]
	t.6 = call t.5(obj)
	arr = t.6
	t.7 = arr
	if t.7 goto :null3
		Error("null pointer")
	null3:
	t.8 = [t.7]
	t.8 = Lt(0 t.8)
	if t.8 goto :bounds1
		Error("array index out of bounds")
	bounds1:
	t.8 = MulS(0 4)
	t.8 = Add(t.8 t.7)
	[t.8 + 4] = 1
	t.9 = arr
	if t.9 goto :null4
		Error("null pointer")
	null4:
	t.10 = [t.9]
	t.10 = Lt(1 t.10)
	if t.10 goto :bounds2
		Error("array index out of bounds")
	bounds2:
	t.10 = MulS(1 4)
	t.10 = Add(t.10 t.9)
	[t.10 + 4] = 9
	t.11 = arr
	if t.11 goto :null5
		Error("null pointer")
	null5:
	t.12 = [t.11]
	t.12 = Lt(2 t.12)
	if t.12 goto :bounds3
		Error("array index out of bounds")
	bounds3:
	t.12 = MulS(2 4)
	t.12 = Add(t.12 t.11)
	[t.12 + 4] = 2
	t.13 = arr
	if t.13 goto :null6
		Error("null pointer")
	null6:
	t.14 = [t.13]
	t.14 = Lt(3 t.14)
	if t.14 goto :bounds4
		Error("array index out of bounds")
	bounds4:
	t.14 = MulS(3 4)
	t.14 = Add(t.14 t.13)
	[t.14 + 4] = 8
	t.15 = arr
	if t.15 goto :null7
		Error("null pointer")
	null7:
	t.16 = [t.15]
	t.16 = Lt(4 t.16)
	if t.16 goto :bounds5
		Error("array index out of bounds")
	bounds5:
	t.16 = MulS(4 4)
	t.16 = Add(t.16 t.15)
	[t.16 + 4] = 3
	t.17 = arr
	if t.17 goto :null8
		Error("null pointer")
	null8:
	t.18 = [t.17]
	t.18 = Lt(5 t.18)
	if t.18 goto :bounds6
		Error("array index out of bounds")
	bounds6:
	t.18 = MulS(5 4)
	t.18 = Add(t.18 t.17)
	[t.18 + 4] = 7
	t.19 = arr
	if t.19 goto :null9
		Error("null pointer")
	null9:
	t.20 = [t.19]
	t.20 = Lt(6 t.20)
	if t.20 goto :bounds7
		Error("array index out of bounds")
	bounds7:
	t.20 = MulS(6 4)
	t.20 = Add(t.20 t.19)
	[t.20 + 4] = 4
	t.21 = arr
	if t.21 goto :null10
		Error("null pointer")
	null10:
	t.22 = [t.21]
	t.22 = Lt(7 t.22)
	if t.22 goto :bounds8
		Error("array index out of bounds")
	bounds8:
	t.22 = MulS(7 4)
	t.22 = Add(t.22 t.21)
	[t.22 + 4] = 6
	t.23 = arr
	if t.23 goto :null11
		Error("null pointer")
	null11:
	t.24 = [t.23]
	t.24 = Lt(8 t.24)
	if t.24 goto :bounds9
		Error("array index out of bounds")
	bounds9:
	t.24 = MulS(8 4)
	t.24 = Add(t.24 t.23)
	[t.24 + 4] = 5
	t.25 = arr
	if t.25 goto :null12
		Error("null pointer")
	null12:
	t.26 = [t.25]
	t.26 = Lt(9 t.26)
	if t.26 goto :bounds10
		Error("array index out of bounds")
	bounds10:
	t.26 = MulS(9 4)
	t.26 = Add(t.26 t.25)
	[t.26 + 4] = 5
	if obj goto :null13
		Error("null pointer")
	null13:
	t.27 = [obj]
	t.28 = [t.27+4]
	t.29 = call t.28(obj)
	arr = t.29
	ret
func A.constructor(this)
	t.1 = call :AllocArray(10)
	[this+4] = t.1
	t.3 = [this+4]
	if t.3 goto :null14
		Error("null pointer")
	null14:
	t.4 = [t.3]
	t.4 = Lt(0 t.4)
	if t.4 goto :bounds11
		Error("array index out of bounds")
	bounds11:
	t.4 = MulS(0 4)
	t.4 = Add(t.4 t.3)
	[t.4 + 4] = 10
	t.6 = [this+4]
	if t.6 goto :null15
		Error("null pointer")
	null15:
	t.7 = [t.6]
	t.7 = Lt(1 t.7)
	if t.7 goto :bounds12
		Error("array index out of bounds")
	bounds12:
	t.7 = MulS(1 4)
	t.7 = Add(t.7 t.6)
	[t.7 + 4] = 9
	t.9 = [this+4]
	if t.9 goto :null16
		Error("null pointer")
	null16:
	t.10 = [t.9]
	t.10 = Lt(2 t.10)
	if t.10 goto :bounds13
		Error("array index out of bounds")
	bounds13:
	t.10 = MulS(2 4)
	t.10 = Add(t.10 t.9)
	[t.10 + 4] = 8
	t.12 = [this+4]
	if t.12 goto :null17
		Error("null pointer")
	null17:
	t.13 = [t.12]
	t.13 = Lt(3 t.13)
	if t.13 goto :bounds14
		Error("array index out of bounds")
	bounds14:
	t.13 = MulS(3 4)
	t.13 = Add(t.13 t.12)
	[t.13 + 4] = 7
	t.15 = [this+4]
	if t.15 goto :null18
		Error("null pointer")
	null18:
	t.16 = [t.15]
	t.16 = Lt(4 t.16)
	if t.16 goto :bounds15
		Error("array index out of bounds")
	bounds15:
	t.16 = MulS(4 4)
	t.16 = Add(t.16 t.15)
	[t.16 + 4] = 6
	t.18 = [this+4]
	if t.18 goto :null19
		Error("null pointer")
	null19:
	t.19 = [t.18]
	t.19 = Lt(5 t.19)
	if t.19 goto :bounds16
		Error("array index out of bounds")
	bounds16:
	t.19 = MulS(5 4)
	t.19 = Add(t.19 t.18)
	[t.19 + 4] = 5
	t.21 = [this+4]
	if t.21 goto :null20
		Error("null pointer")
	null20:
	t.22 = [t.21]
	t.22 = Lt(6 t.22)
	if t.22 goto :bounds17
		Error("array index out of bounds")
	bounds17:
	t.22 = MulS(6 4)
	t.22 = Add(t.22 t.21)
	[t.22 + 4] = 4
	t.24 = [this+4]
	if t.24 goto :null21
		Error("null pointer")
	null21:
	t.25 = [t.24]
	t.25 = Lt(7 t.25)
	if t.25 goto :bounds18
		Error("array index out of bounds")
	bounds18:
	t.25 = MulS(7 4)
	t.25 = Add(t.25 t.24)
	[t.25 + 4] = 3
	t.27 = [this+4]
	if t.27 goto :null22
		Error("null pointer")
	null22:
	t.28 = [t.27]
	t.28 = Lt(8 t.28)
	if t.28 goto :bounds19
		Error("array index out of bounds")
	bounds19:
	t.28 = MulS(8 4)
	t.28 = Add(t.28 t.27)
	[t.28 + 4] = 2
	t.30 = [this+4]
	if t.30 goto :null23
		Error("null pointer")
	null23:
	t.31 = [t.30]
	t.31 = Lt(9 t.31)
	if t.31 goto :bounds20
		Error("array index out of bounds")
	bounds20:
	t.31 = MulS(9 4)
	t.31 = Add(t.31 t.30)
	[t.31 + 4] = 1
	t.32 = [this+4]
	ret t.32
func A.increment(this)
	i = 0
	while1_top:
	t.0 = LtS(i 10)
	if0 t.0 goto :while1_end
		t.1 = [this+4]
		if t.1 goto :null24
			Error("null pointer")
		null24:
		t.2 = [t.1]
		t.2 = Lt(i t.2)
		if t.2 goto :bounds21
			Error("array index out of bounds")
		bounds21:
		t.2 = MulS(i 4)
		t.2 = Add(t.2 t.1)
		t.3 = [t.2 + 4]
		PrintIntS(t.3)
		t.4 = Add(i 1)
		i = t.4
		goto :while1_top
	while1_end:
	t.5 = [this+4]
	ret t.5


func AllocArray(size)
	bytes = MulS(size 4)
	bytes = Add(bytes 4)
	v = HeapAllocZ(bytes)
	[v] = size
	ret v
