const vmt_BBS
	:BBS.Start
	:BBS.Sort
	:BBS.Print
	:BBS.Init
func Main()
	t.0 = HeapAllocZ(12)
	[t.0] = :vmt_BBS
	if t.0 goto :null1
		Error("null pointer")
	null1:
	t.1 = [t.0]
	t.2 = [t.1+0]
	t.3 = call t.2(t.0 10)
	PrintIntS(t.3)
	ret
func BBS.Start(this sz)
	t.0 = [this]
	t.1 = [t.0+12]
	t.2 = call t.1(this sz)
	aux01 = t.2
	t.3 = [this]
	t.4 = [t.3+8]
	t.5 = call t.4(this)
	aux01 = t.5
	PrintIntS(99999)
	t.6 = [this]
	t.7 = [t.6+4]
	t.8 = call t.7(this)
	aux01 = t.8
	t.9 = [this]
	t.10 = [t.9+8]
	t.11 = call t.10(this)
	aux01 = t.11
	ret 0
func BBS.Sort(this)
	t.0 = [this+8]
	t.1 = Sub(t.0 1)
	i = t.1
	t.2 = Sub(0 1)
	aux02 = t.2
	while1_top:
	t.3 = LtS(aux02 i)
	if0 t.3 goto :while1_end
		j = 1
		while2_top:
		t.4 = Add(i 1)
		t.5 = LtS(j t.4)
		if0 t.5 goto :while2_end
			t.6 = Sub(j 1)
			aux07 = t.6
			t.7 = [this+4]
			if t.7 goto :null2
				Error("null pointer")
			null2:
			t.8 = [t.7]
			t.8 = Lt(aux07 t.8)
			if t.8 goto :bounds1
				Error("array index out of bounds")
			bounds1:
			t.8 = MulS(aux07 4)
			t.8 = Add(t.8 t.7)
			t.9 = [t.8 + 4]
			aux04 = t.9
			t.10 = [this+4]
			if t.10 goto :null3
				Error("null pointer")
			null3:
			t.11 = [t.10]
			t.11 = Lt(j t.11)
			if t.11 goto :bounds2
				Error("array index out of bounds")
			bounds2:
			t.11 = MulS(j 4)
			t.11 = Add(t.11 t.10)
			t.12 = [t.11 + 4]
			aux05 = t.12
			t.13 = LtS(aux05 aux04)
			if0 t.13 goto :if1_else
				t.14 = Sub(j 1)
				aux06 = t.14
				t.15 = [this+4]
				if t.15 goto :null4
					Error("null pointer")
				null4:
				t.16 = [t.15]
				t.16 = Lt(aux06 t.16)
				if t.16 goto :bounds3
					Error("array index out of bounds")
				bounds3:
				t.16 = MulS(aux06 4)
				t.16 = Add(t.16 t.15)
				t.17 = [t.16 + 4]
				t = t.17
				t.19 = [this + 4]
				if t.19 goto :null5
					Error("null pointer")
				null5:
				t.20 = [t.19]
				t.20 = Lt(aux06 t.20)
				if t.20 goto :bounds4
					Error("array index out of bounds")
				bounds4:
				t.20 = MulS(aux06 4)
				t.20 = Add(t.20 t.19)
				t.21 = [this+4]
				if t.21 goto :null6
					Error("null pointer")
				null6:
				t.22 = [t.21]
				t.22 = Lt(j t.22)
				if t.22 goto :bounds5
					Error("array index out of bounds")
				bounds5:
				t.22 = MulS(j 4)
				t.22 = Add(t.22 t.21)
				t.23 = [t.22 + 4]
				[t.20 + 4] = t.23
				t.25 = [this + 4]
				if t.25 goto :null7
					Error("null pointer")
				null7:
				t.26 = [t.25]
				t.26 = Lt(j t.26)
				if t.26 goto :bounds6
					Error("array index out of bounds")
				bounds6:
				t.26 = MulS(j 4)
				t.26 = Add(t.26 t.25)
				[t.26 + 4] = t
				goto :if1_end
			if1_else:
			nt = 0
			if1_end:
			t.27 = Add(j 1)
			j = t.27
			goto :while2_top
		while2_end:
		t.28 = Sub(i 1)
		i = t.28
		goto :while1_top
	while1_end:
	ret 0
func BBS.Print(this)
	j = 0
	while3_top:
	t.0 = [this+8]
	t.1 = LtS(j t.0)
	if0 t.1 goto :while3_end
		t.2 = [this+4]
		if t.2 goto :null8
			Error("null pointer")
		null8:
		t.3 = [t.2]
		t.3 = Lt(j t.3)
		if t.3 goto :bounds7
			Error("array index out of bounds")
		bounds7:
		t.3 = MulS(j 4)
		t.3 = Add(t.3 t.2)
		t.4 = [t.3 + 4]
		PrintIntS(t.4)
		t.5 = Add(j 1)
		j = t.5
		goto :while3_top
	while3_end:
	ret 0
func BBS.Init(this sz)
	[this+8] = sz
	t.2 = call :AllocArray(sz)
	[this+4] = t.2
	t.4 = [this + 4]
	if t.4 goto :null9
		Error("null pointer")
	null9:
	t.5 = [t.4]
	t.5 = Lt(0 t.5)
	if t.5 goto :bounds8
		Error("array index out of bounds")
	bounds8:
	t.5 = MulS(0 4)
	t.5 = Add(t.5 t.4)
	[t.5 + 4] = 20
	t.7 = [this + 4]
	if t.7 goto :null10
		Error("null pointer")
	null10:
	t.8 = [t.7]
	t.8 = Lt(1 t.8)
	if t.8 goto :bounds9
		Error("array index out of bounds")
	bounds9:
	t.8 = MulS(1 4)
	t.8 = Add(t.8 t.7)
	[t.8 + 4] = 7
	t.10 = [this + 4]
	if t.10 goto :null11
		Error("null pointer")
	null11:
	t.11 = [t.10]
	t.11 = Lt(2 t.11)
	if t.11 goto :bounds10
		Error("array index out of bounds")
	bounds10:
	t.11 = MulS(2 4)
	t.11 = Add(t.11 t.10)
	[t.11 + 4] = 12
	t.13 = [this + 4]
	if t.13 goto :null12
		Error("null pointer")
	null12:
	t.14 = [t.13]
	t.14 = Lt(3 t.14)
	if t.14 goto :bounds11
		Error("array index out of bounds")
	bounds11:
	t.14 = MulS(3 4)
	t.14 = Add(t.14 t.13)
	[t.14 + 4] = 18
	t.16 = [this + 4]
	if t.16 goto :null13
		Error("null pointer")
	null13:
	t.17 = [t.16]
	t.17 = Lt(4 t.17)
	if t.17 goto :bounds12
		Error("array index out of bounds")
	bounds12:
	t.17 = MulS(4 4)
	t.17 = Add(t.17 t.16)
	[t.17 + 4] = 2
	t.19 = [this + 4]
	if t.19 goto :null14
		Error("null pointer")
	null14:
	t.20 = [t.19]
	t.20 = Lt(5 t.20)
	if t.20 goto :bounds13
		Error("array index out of bounds")
	bounds13:
	t.20 = MulS(5 4)
	t.20 = Add(t.20 t.19)
	[t.20 + 4] = 11
	t.22 = [this + 4]
	if t.22 goto :null15
		Error("null pointer")
	null15:
	t.23 = [t.22]
	t.23 = Lt(6 t.23)
	if t.23 goto :bounds14
		Error("array index out of bounds")
	bounds14:
	t.23 = MulS(6 4)
	t.23 = Add(t.23 t.22)
	[t.23 + 4] = 6
	t.25 = [this + 4]
	if t.25 goto :null16
		Error("null pointer")
	null16:
	t.26 = [t.25]
	t.26 = Lt(7 t.26)
	if t.26 goto :bounds15
		Error("array index out of bounds")
	bounds15:
	t.26 = MulS(7 4)
	t.26 = Add(t.26 t.25)
	[t.26 + 4] = 9
	t.28 = [this + 4]
	if t.28 goto :null17
		Error("null pointer")
	null17:
	t.29 = [t.28]
	t.29 = Lt(8 t.29)
	if t.29 goto :bounds16
		Error("array index out of bounds")
	bounds16:
	t.29 = MulS(8 4)
	t.29 = Add(t.29 t.28)
	[t.29 + 4] = 19
	t.31 = [this + 4]
	if t.31 goto :null18
		Error("null pointer")
	null18:
	t.32 = [t.31]
	t.32 = Lt(9 t.32)
	if t.32 goto :bounds17
		Error("array index out of bounds")
	bounds17:
	t.32 = MulS(9 4)
	t.32 = Add(t.32 t.31)
	[t.32 + 4] = 5
	ret 0


func AllocArray(size)
	bytes = MulS(size 4)
	bytes = Add(bytes 4)
	v = HeapAllocZ(bytes)
	[v] = size
	ret v
