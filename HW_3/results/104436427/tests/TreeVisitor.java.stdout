const vmt_TreeVisitor
const vmt_TV
	:TV.Start
const vmt_Visitor
	:Visitor.visit
const vmt_Tree
	:Tree.Init
	:Tree.SetRight
	:Tree.SetLeft
	:Tree.GetRight
	:Tree.GetLeft
	:Tree.GetKey
	:Tree.SetKey
	:Tree.GetHas_Right
	:Tree.GetHas_Left
	:Tree.SetHas_Left
	:Tree.SetHas_Right
	:Tree.Compare
	:Tree.Insert
	:Tree.Delete
	:Tree.Remove
	:Tree.RemoveRight
	:Tree.RemoveLeft
	:Tree.Search
	:Tree.Print
	:Tree.RecPrint
	:Tree.accept
const vmt_MyVisitor
	:MyVisitor.visit
func Main()
	t.0 = HeapAllocZ(4)
	[t.0] = :vmt_TV
	if t.0 goto :null1
		Error("null pointer")
	null1:
	t.1 = [t.0]
	t.2 = [t.1+0]
	t.3 = call t.2(t.0)
	PrintIntS(t.3)
	ret
func TV.Start(this)
	t.0 = HeapAllocZ(28)
	[t.0] = :vmt_Tree
	root = t.0
	if root goto :null2
		Error("null pointer")
	null2:
	t.1 = [root]
	t.2 = [t.1+0]
	t.3 = call t.2(root 16)
	ntb = t.3
	if root goto :null3
		Error("null pointer")
	null3:
	t.4 = [root]
	t.5 = [t.4+72]
	t.6 = call t.5(root)
	ntb = t.6
	PrintIntS(100000000)
	if root goto :null4
		Error("null pointer")
	null4:
	t.7 = [root]
	t.8 = [t.7+48]
	t.9 = call t.8(root 8)
	ntb = t.9
	if root goto :null5
		Error("null pointer")
	null5:
	t.10 = [root]
	t.11 = [t.10+48]
	t.12 = call t.11(root 24)
	ntb = t.12
	if root goto :null6
		Error("null pointer")
	null6:
	t.13 = [root]
	t.14 = [t.13+48]
	t.15 = call t.14(root 4)
	ntb = t.15
	if root goto :null7
		Error("null pointer")
	null7:
	t.16 = [root]
	t.17 = [t.16+48]
	t.18 = call t.17(root 12)
	ntb = t.18
	if root goto :null8
		Error("null pointer")
	null8:
	t.19 = [root]
	t.20 = [t.19+48]
	t.21 = call t.20(root 20)
	ntb = t.21
	if root goto :null9
		Error("null pointer")
	null9:
	t.22 = [root]
	t.23 = [t.22+48]
	t.24 = call t.23(root 28)
	ntb = t.24
	if root goto :null10
		Error("null pointer")
	null10:
	t.25 = [root]
	t.26 = [t.25+48]
	t.27 = call t.26(root 14)
	ntb = t.27
	if root goto :null11
		Error("null pointer")
	null11:
	t.28 = [root]
	t.29 = [t.28+72]
	t.30 = call t.29(root)
	ntb = t.30
	PrintIntS(100000000)
	t.31 = HeapAllocZ(12)
	[t.31] = :vmt_MyVisitor
	v = t.31
	PrintIntS(50000000)
	if root goto :null12
		Error("null pointer")
	null12:
	t.32 = [root]
	t.33 = [t.32+80]
	t.34 = call t.33(root v)
	nti = t.34
	PrintIntS(100000000)
	if root goto :null13
		Error("null pointer")
	null13:
	t.35 = [root]
	t.36 = [t.35+68]
	t.37 = call t.36(root 24)
	PrintIntS(t.37)
	if root goto :null14
		Error("null pointer")
	null14:
	t.38 = [root]
	t.39 = [t.38+68]
	t.40 = call t.39(root 12)
	PrintIntS(t.40)
	if root goto :null15
		Error("null pointer")
	null15:
	t.41 = [root]
	t.42 = [t.41+68]
	t.43 = call t.42(root 16)
	PrintIntS(t.43)
	if root goto :null16
		Error("null pointer")
	null16:
	t.44 = [root]
	t.45 = [t.44+68]
	t.46 = call t.45(root 50)
	PrintIntS(t.46)
	if root goto :null17
		Error("null pointer")
	null17:
	t.47 = [root]
	t.48 = [t.47+68]
	t.49 = call t.48(root 12)
	PrintIntS(t.49)
	if root goto :null18
		Error("null pointer")
	null18:
	t.50 = [root]
	t.51 = [t.50+52]
	t.52 = call t.51(root 12)
	ntb = t.52
	if root goto :null19
		Error("null pointer")
	null19:
	t.53 = [root]
	t.54 = [t.53+72]
	t.55 = call t.54(root)
	ntb = t.55
	if root goto :null20
		Error("null pointer")
	null20:
	t.56 = [root]
	t.57 = [t.56+68]
	t.58 = call t.57(root 12)
	PrintIntS(t.58)
	ret 0
func Tree.Init(this v_key)
	[this+12] = v_key
	[this+16] = 0
	[this+20] = 0
	ret 1
func Tree.SetRight(this rn)
	[this+8] = rn
	ret 1
func Tree.SetLeft(this ln)
	[this+4] = ln
	ret 1
func Tree.GetRight(this)
	t.0 = [this+8]
	ret t.0
func Tree.GetLeft(this)
	t.0 = [this+4]
	ret t.0
func Tree.GetKey(this)
	t.0 = [this+12]
	ret t.0
func Tree.SetKey(this v_key)
	[this+12] = v_key
	ret 1
func Tree.GetHas_Right(this)
	t.0 = [this+20]
	ret t.0
func Tree.GetHas_Left(this)
	t.0 = [this+16]
	ret t.0
func Tree.SetHas_Left(this val)
	[this+16] = val
	ret 1
func Tree.SetHas_Right(this val)
	[this+20] = val
	ret 1
func Tree.Compare(this num1 num2)
	ntb = 0
	t.0 = Add(num2 1)
	nti = t.0
	t.1 = LtS(num1 num2)
	if0 t.1 goto :if1_else
	ntb = 0
		goto :if1_end
	if1_else:
	t.2 = LtS(num1 nti)
	t.3 = Sub(1 t.2)
	if0 t.3 goto :if2_else
	ntb = 0
		goto :if2_end
	if2_else:
	ntb = 1
	if2_end:
	if1_end:
	ret ntb
func Tree.Insert(this v_key)
	t.0 = HeapAllocZ(28)
	[t.0] = :vmt_Tree
	new_node = t.0
	if new_node goto :null21
		Error("null pointer")
	null21:
	t.1 = [new_node]
	t.2 = [t.1+0]
	t.3 = call t.2(new_node v_key)
	ntb = t.3
	current_node = this
	cont = 1
	while1_top:
	if0 cont goto :while1_end
		if current_node goto :null22
			Error("null pointer")
		null22:
		t.4 = [current_node]
		t.5 = [t.4+20]
		t.6 = call t.5(current_node)
		key_aux = t.6
		t.7 = LtS(v_key key_aux)
		if0 t.7 goto :if3_else
			if current_node goto :null23
				Error("null pointer")
			null23:
			t.8 = [current_node]
			t.9 = [t.8+32]
			t.10 = call t.9(current_node)
			if0 t.10 goto :if4_else
			if current_node goto :null24
				Error("null pointer")
			null24:
			t.11 = [current_node]
			t.12 = [t.11+16]
			t.13 = call t.12(current_node)
			current_node = t.13
				goto :if4_end
			if4_else:
				cont = 0
				if current_node goto :null25
					Error("null pointer")
				null25:
				t.14 = [current_node]
				t.15 = [t.14+36]
				t.16 = call t.15(current_node 1)
				ntb = t.16
				if current_node goto :null26
					Error("null pointer")
				null26:
				t.17 = [current_node]
				t.18 = [t.17+8]
				t.19 = call t.18(current_node new_node)
				ntb = t.19
			if4_end:
			goto :if3_end
		if3_else:
			if current_node goto :null27
				Error("null pointer")
			null27:
			t.20 = [current_node]
			t.21 = [t.20+28]
			t.22 = call t.21(current_node)
			if0 t.22 goto :if5_else
			if current_node goto :null28
				Error("null pointer")
			null28:
			t.23 = [current_node]
			t.24 = [t.23+12]
			t.25 = call t.24(current_node)
			current_node = t.25
				goto :if5_end
			if5_else:
				cont = 0
				if current_node goto :null29
					Error("null pointer")
				null29:
				t.26 = [current_node]
				t.27 = [t.26+40]
				t.28 = call t.27(current_node 1)
				ntb = t.28
				if current_node goto :null30
					Error("null pointer")
				null30:
				t.29 = [current_node]
				t.30 = [t.29+4]
				t.31 = call t.30(current_node new_node)
				ntb = t.31
			if5_end:
		if3_end:
		goto :while1_top
	while1_end:
	ret 1
func Tree.Delete(this v_key)
	current_node = this
	parent_node = this
	cont = 1
	found = 0
	is_root = 1
	while2_top:
	if0 cont goto :while2_end
		if current_node goto :null31
			Error("null pointer")
		null31:
		t.0 = [current_node]
		t.1 = [t.0+20]
		t.2 = call t.1(current_node)
		key_aux = t.2
		t.3 = LtS(v_key key_aux)
		if0 t.3 goto :if6_else
		if current_node goto :null32
			Error("null pointer")
		null32:
		t.4 = [current_node]
		t.5 = [t.4+32]
		t.6 = call t.5(current_node)
		if0 t.6 goto :if7_else
			parent_node = current_node
			if current_node goto :null33
				Error("null pointer")
			null33:
			t.7 = [current_node]
			t.8 = [t.7+16]
			t.9 = call t.8(current_node)
			current_node = t.9
			goto :if7_end
		if7_else:
		cont = 0
		if7_end:
			goto :if6_end
		if6_else:
		t.10 = LtS(key_aux v_key)
		if0 t.10 goto :if8_else
		if current_node goto :null34
			Error("null pointer")
		null34:
		t.11 = [current_node]
		t.12 = [t.11+28]
		t.13 = call t.12(current_node)
		if0 t.13 goto :if9_else
			parent_node = current_node
			if current_node goto :null35
				Error("null pointer")
			null35:
			t.14 = [current_node]
			t.15 = [t.14+12]
			t.16 = call t.15(current_node)
			current_node = t.16
			goto :if9_end
		if9_else:
		cont = 0
		if9_end:
			goto :if8_end
		if8_else:
			if0 is_root goto :if10_else
			if current_node goto :null36
				Error("null pointer")
			null36:
			t.17 = [current_node]
			t.18 = [t.17+28]
			t.19 = call t.18(current_node)
			t.20 = Sub(1 t.19)
			if0 t.20 goto :if12_else
				if current_node goto :null37
					Error("null pointer")
				null37:
				t.21 = [current_node]
				t.22 = [t.21+32]
				t.23 = call t.22(current_node)
				t.24 = Sub(1 t.23)
				t.25 = MulS(t.20 t.24)
				goto :if12_end
			if12_else:
				t.25 = 0
			if12_end:
			t.26 = Eq(1 t.25)
			if0 t.26 goto :if11_else
			ntb = 1
				goto :if11_end
			if11_else:
			t.27 = [this]
			t.28 = [t.27+56]
			t.29 = call t.28(this parent_node current_node)
			ntb = t.29
			if11_end:
				goto :if10_end
			if10_else:
			t.30 = [this]
			t.31 = [t.30+56]
			t.32 = call t.31(this parent_node current_node)
			ntb = t.32
			if10_end:
			found = 1
			cont = 0
		if8_end:
		if6_end:
		is_root = 0
		goto :while2_top
	while2_end:
	ret found
func Tree.Remove(this p_node c_node)
	if c_node goto :null38
		Error("null pointer")
	null38:
	t.0 = [c_node]
	t.1 = [t.0+32]
	t.2 = call t.1(c_node)
	if0 t.2 goto :if13_else
	t.3 = [this]
	t.4 = [t.3+64]
	t.5 = call t.4(this p_node c_node)
	ntb = t.5
		goto :if13_end
	if13_else:
	if c_node goto :null39
		Error("null pointer")
	null39:
	t.6 = [c_node]
	t.7 = [t.6+28]
	t.8 = call t.7(c_node)
	if0 t.8 goto :if14_else
	t.9 = [this]
	t.10 = [t.9+60]
	t.11 = call t.10(this p_node c_node)
	ntb = t.11
		goto :if14_end
	if14_else:
		if c_node goto :null40
			Error("null pointer")
		null40:
		t.12 = [c_node]
		t.13 = [t.12+20]
		t.14 = call t.13(c_node)
		auxkey1 = t.14
		if p_node goto :null41
			Error("null pointer")
		null41:
		t.15 = [p_node]
		t.16 = [t.15+16]
		t.17 = call t.16(p_node)
		if t.17 goto :null42
			Error("null pointer")
		null42:
		t.18 = [t.17]
		t.19 = [t.18+20]
		t.20 = call t.19(t.17)
		auxkey2 = t.20
		t.21 = [this]
		t.22 = [t.21+44]
		t.23 = call t.22(this auxkey1 auxkey2)
		if0 t.23 goto :if15_else
			if p_node goto :null43
				Error("null pointer")
			null43:
			t.24 = [p_node]
			t.25 = [t.24+8]
			t.26 = [this+24]
			t.27 = call t.25(p_node t.26)
			ntb = t.27
			if p_node goto :null44
				Error("null pointer")
			null44:
			t.28 = [p_node]
			t.29 = [t.28+36]
			t.30 = call t.29(p_node 0)
			ntb = t.30
			goto :if15_end
		if15_else:
			if p_node goto :null45
				Error("null pointer")
			null45:
			t.31 = [p_node]
			t.32 = [t.31+4]
			t.33 = [this+24]
			t.34 = call t.32(p_node t.33)
			ntb = t.34
			if p_node goto :null46
				Error("null pointer")
			null46:
			t.35 = [p_node]
			t.36 = [t.35+40]
			t.37 = call t.36(p_node 0)
			ntb = t.37
		if15_end:
	if14_end:
	if13_end:
	ret 1
func Tree.RemoveRight(this p_node c_node)
	while3_top:
	if c_node goto :null47
		Error("null pointer")
	null47:
	t.0 = [c_node]
	t.1 = [t.0+28]
	t.2 = call t.1(c_node)
	if0 t.2 goto :while3_end
		if c_node goto :null48
			Error("null pointer")
		null48:
		t.3 = [c_node]
		t.4 = [t.3+24]
		if c_node goto :null49
			Error("null pointer")
		null49:
		t.5 = [c_node]
		t.6 = [t.5+12]
		t.7 = call t.6(c_node)
		if t.7 goto :null50
			Error("null pointer")
		null50:
		t.8 = [t.7]
		t.9 = [t.8+20]
		t.10 = call t.9(t.7)
		t.11 = call t.4(c_node t.10)
		ntb = t.11
		p_node = c_node
		if c_node goto :null51
			Error("null pointer")
		null51:
		t.12 = [c_node]
		t.13 = [t.12+12]
		t.14 = call t.13(c_node)
		c_node = t.14
		goto :while3_top
	while3_end:
	if p_node goto :null52
		Error("null pointer")
	null52:
	t.15 = [p_node]
	t.16 = [t.15+4]
	t.17 = [this+24]
	t.18 = call t.16(p_node t.17)
	ntb = t.18
	if p_node goto :null53
		Error("null pointer")
	null53:
	t.19 = [p_node]
	t.20 = [t.19+40]
	t.21 = call t.20(p_node 0)
	ntb = t.21
	ret 1
func Tree.RemoveLeft(this p_node c_node)
	while4_top:
	if c_node goto :null54
		Error("null pointer")
	null54:
	t.0 = [c_node]
	t.1 = [t.0+32]
	t.2 = call t.1(c_node)
	if0 t.2 goto :while4_end
		if c_node goto :null55
			Error("null pointer")
		null55:
		t.3 = [c_node]
		t.4 = [t.3+24]
		if c_node goto :null56
			Error("null pointer")
		null56:
		t.5 = [c_node]
		t.6 = [t.5+16]
		t.7 = call t.6(c_node)
		if t.7 goto :null57
			Error("null pointer")
		null57:
		t.8 = [t.7]
		t.9 = [t.8+20]
		t.10 = call t.9(t.7)
		t.11 = call t.4(c_node t.10)
		ntb = t.11
		p_node = c_node
		if c_node goto :null58
			Error("null pointer")
		null58:
		t.12 = [c_node]
		t.13 = [t.12+16]
		t.14 = call t.13(c_node)
		c_node = t.14
		goto :while4_top
	while4_end:
	if p_node goto :null59
		Error("null pointer")
	null59:
	t.15 = [p_node]
	t.16 = [t.15+8]
	t.17 = [this+24]
	t.18 = call t.16(p_node t.17)
	ntb = t.18
	if p_node goto :null60
		Error("null pointer")
	null60:
	t.19 = [p_node]
	t.20 = [t.19+36]
	t.21 = call t.20(p_node 0)
	ntb = t.21
	ret 1
func Tree.Search(this v_key)
	current_node = this
	cont = 1
	ifound = 0
	while5_top:
	if0 cont goto :while5_end
		if current_node goto :null61
			Error("null pointer")
		null61:
		t.0 = [current_node]
		t.1 = [t.0+20]
		t.2 = call t.1(current_node)
		key_aux = t.2
		t.3 = LtS(v_key key_aux)
		if0 t.3 goto :if16_else
		if current_node goto :null62
			Error("null pointer")
		null62:
		t.4 = [current_node]
		t.5 = [t.4+32]
		t.6 = call t.5(current_node)
		if0 t.6 goto :if17_else
		if current_node goto :null63
			Error("null pointer")
		null63:
		t.7 = [current_node]
		t.8 = [t.7+16]
		t.9 = call t.8(current_node)
		current_node = t.9
			goto :if17_end
		if17_else:
		cont = 0
		if17_end:
			goto :if16_end
		if16_else:
		t.10 = LtS(key_aux v_key)
		if0 t.10 goto :if18_else
		if current_node goto :null64
			Error("null pointer")
		null64:
		t.11 = [current_node]
		t.12 = [t.11+28]
		t.13 = call t.12(current_node)
		if0 t.13 goto :if19_else
		if current_node goto :null65
			Error("null pointer")
		null65:
		t.14 = [current_node]
		t.15 = [t.14+12]
		t.16 = call t.15(current_node)
		current_node = t.16
			goto :if19_end
		if19_else:
		cont = 0
		if19_end:
			goto :if18_end
		if18_else:
			ifound = 1
			cont = 0
		if18_end:
		if16_end:
		goto :while5_top
	while5_end:
	ret ifound
func Tree.Print(this)
	current_node = this
	t.0 = [this]
	t.1 = [t.0+76]
	t.2 = call t.1(this current_node)
	ntb = t.2
	ret 1
func Tree.RecPrint(this node)
	if node goto :null66
		Error("null pointer")
	null66:
	t.0 = [node]
	t.1 = [t.0+32]
	t.2 = call t.1(node)
	if0 t.2 goto :if20_else
		t.3 = [this]
		t.4 = [t.3+76]
		if node goto :null67
			Error("null pointer")
		null67:
		t.5 = [node]
		t.6 = [t.5+16]
		t.7 = call t.6(node)
		t.8 = call t.4(this t.7)
		ntb = t.8
		goto :if20_end
	if20_else:
	ntb = 1
	if20_end:
	if node goto :null68
		Error("null pointer")
	null68:
	t.9 = [node]
	t.10 = [t.9+20]
	t.11 = call t.10(node)
	PrintIntS(t.11)
	if node goto :null69
		Error("null pointer")
	null69:
	t.12 = [node]
	t.13 = [t.12+28]
	t.14 = call t.13(node)
	if0 t.14 goto :if21_else
		t.15 = [this]
		t.16 = [t.15+76]
		if node goto :null70
			Error("null pointer")
		null70:
		t.17 = [node]
		t.18 = [t.17+12]
		t.19 = call t.18(node)
		t.20 = call t.16(this t.19)
		ntb = t.20
		goto :if21_end
	if21_else:
	ntb = 1
	if21_end:
	ret 1
func Tree.accept(this v)
	PrintIntS(333)
	if v goto :null71
		Error("null pointer")
	null71:
	t.0 = [v]
	t.1 = [t.0+0]
	t.2 = call t.1(v this)
	nti = t.2
	ret 0
func Visitor.visit(this n)
	if n goto :null72
		Error("null pointer")
	null72:
	t.0 = [n]
	t.1 = [t.0+28]
	t.2 = call t.1(n)
	if0 t.2 goto :if22_else
		if n goto :null73
			Error("null pointer")
		null73:
		t.4 = [n]
		t.5 = [t.4+12]
		t.6 = call t.5(n)
		[this+8] = t.6
		t.7 = [this+8]
		if t.7 goto :null74
			Error("null pointer")
		null74:
		t.8 = [t.7]
		t.9 = [t.8+80]
		t.10 = call t.9(t.7 this)
		nti = t.10
		goto :if22_end
	if22_else:
	nti = 0
	if22_end:
	if n goto :null75
		Error("null pointer")
	null75:
	t.11 = [n]
	t.12 = [t.11+32]
	t.13 = call t.12(n)
	if0 t.13 goto :if23_else
		if n goto :null76
			Error("null pointer")
		null76:
		t.15 = [n]
		t.16 = [t.15+16]
		t.17 = call t.16(n)
		[this+4] = t.17
		t.18 = [this+4]
		if t.18 goto :null77
			Error("null pointer")
		null77:
		t.19 = [t.18]
		t.20 = [t.19+80]
		t.21 = call t.20(t.18 this)
		nti = t.21
		goto :if23_end
	if23_else:
	nti = 0
	if23_end:
	ret 0
func MyVisitor.visit(this n)
	if n goto :null78
		Error("null pointer")
	null78:
	t.0 = [n]
	t.1 = [t.0+28]
	t.2 = call t.1(n)
	if0 t.2 goto :if24_else
		if n goto :null79
			Error("null pointer")
		null79:
		t.4 = [n]
		t.5 = [t.4+12]
		t.6 = call t.5(n)
		[this+8] = t.6
		t.7 = [this+8]
		if t.7 goto :null80
			Error("null pointer")
		null80:
		t.8 = [t.7]
		t.9 = [t.8+80]
		t.10 = call t.9(t.7 this)
		nti = t.10
		goto :if24_end
	if24_else:
	nti = 0
	if24_end:
	if n goto :null81
		Error("null pointer")
	null81:
	t.11 = [n]
	t.12 = [t.11+20]
	t.13 = call t.12(n)
	PrintIntS(t.13)
	if n goto :null82
		Error("null pointer")
	null82:
	t.14 = [n]
	t.15 = [t.14+32]
	t.16 = call t.15(n)
	if0 t.16 goto :if25_else
		if n goto :null83
			Error("null pointer")
		null83:
		t.18 = [n]
		t.19 = [t.18+16]
		t.20 = call t.19(n)
		[this+4] = t.20
		t.21 = [this+4]
		if t.21 goto :null84
			Error("null pointer")
		null84:
		t.22 = [t.21]
		t.23 = [t.22+80]
		t.24 = call t.23(t.21 this)
		nti = t.24
		goto :if25_end
	if25_else:
	nti = 0
	if25_end:
	ret 0
